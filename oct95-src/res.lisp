(defvar resource-file-refnum)(defun my-open-resource-file (name)  (setq resource-file-refnum (open-resource-file name)));  (with-pstrs ((pname (mac-namestring name)));     (setq resource-file-refnum (#_openresfile pname))))(defun my-get-resource (type name)  (with-pstrs ((pname name))    (let ((h (#_getnamedresource type pname)))      (#_detachresource h)      h)))(defun my-make-resource (h type name)  (with-pstrs ((pname name))    (let ((old (#_getnamedresource type pname)))      (if (not (eql old (%null-ptr)))          (progn (#_rmveresource old)(#_disposehandle old))))    (#_addresource h type (#_uniqueid type) pname)    (#_updateresfile resource-file-refnum))  (#_detachresource h))(defun my-close-resource-file ()  (#_closeresfile resource-file-refnum))